// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Commodity {
  id        String   @id @default(uuid())
  ticker    String   @unique
  name      String
  category  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  inventoryItems   InventoryItem[]
  productionOrders ProductionOrder[]
  prices           Price[]

  @@index([ticker])
}

model Base {
  id           String    @id @default(uuid())
  planetId     String    @unique
  planetName   String
  username     String
  lastSyncedAt DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  // Relations
  inventoryItems   InventoryItem[]
  productionOrders ProductionOrder[]

  @@index([planetId])
  @@index([username])
}

model InventoryItem {
  id               String   @id @default(uuid())
  baseId           String
  commodityTicker  String
  quantity         Int
  updatedAt        DateTime @updatedAt

  // Relations
  base      Base      @relation(fields: [baseId], references: [id])
  commodity Commodity @relation(fields: [commodityTicker], references: [ticker])

  @@unique([baseId, commodityTicker])
  @@index([baseId])
  @@index([commodityTicker])
}

model ProductionOrder {
  id               String   @id @default(uuid())
  baseId           String
  commodityTicker  String
  quantity         Int
  durationMs       Int
  startedAt        DateTime
  completesAt      DateTime
  isComplete       Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relations
  base      Base      @relation(fields: [baseId], references: [id])
  commodity Commodity @relation(fields: [commodityTicker], references: [ticker])

  @@index([baseId])
  @@index([commodityTicker])
}

model Price {
  id               String   @id @default(uuid())
  commodityTicker  String
  exchange         String
  buyPrice         Decimal? @db.Decimal(10, 2)
  sellPrice        Decimal? @db.Decimal(10, 2)
  updatedAt        DateTime @updatedAt

  // Relations
  commodity Commodity @relation(fields: [commodityTicker], references: [ticker])

  @@unique([commodityTicker, exchange])
  @@index([commodityTicker])
}